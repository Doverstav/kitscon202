{"version":3,"sources":["components/common/Link.js","components/Home.js","components/Ads/Ads.js","components/MonetizedContent/MonetizedContent.js","components/common/Button.js","components/WebMonetizationSpoofer/WebMonetizationSpoofer.js","components/common/Separator.js","App.js","index.js"],"names":["Link","props","className","href","text","Home","MonetizedContent","Button","classNames","active","onClick","WebMonetizationSpoofer","useState","sliderValue","setSliderValue","isWebMonetized","setIsWebMonetized","wmStatus","setWMStatus","wmTag","useRef","startWMTimer","wmInterval","requestId","dispatchWMProgressEvent","progressEvent","CustomEvent","detail","current","paymentPointer","amount","assetCode","assetScale","document","monetization","dispatchEvent","dispatchWMStateEvent","wmEvent","stateEvent","finalized","undefined","pendingWM","console","log","setWMState","Math","random","toString","substring","Date","now","setTimeout","startWM","state","setInterval","toggleWM","clearTimeout","clearInterval","useEffect","createElement","head","querySelector","content","type","min","max","value","onChange","event","target","Separator","App","activePage","setActivePage","displayedComponent","setDisplayedComponent","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.055640e4.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./Link.css\"\r\nexport default function Link(props) {\r\n  return (\r\n    <a className=\"Link\" href={props.href}>{props.text}</a>\r\n  )\r\n}","import React from \"react\";\r\nimport Link from \"./common/Link\";\r\n\r\nexport default function Home(props) {\r\n  return (\r\n    <div>\r\n      <h1>Here's a nice lil headline!</h1>\r\n      <p>\r\n        Welcome home! This page should probably work as an expaliner for what\r\n        this site is trying to do. I could probably bake the \"Exclusive\r\n        Content\"-demo into this page as well.\r\n      </p>\r\n      <p>Lokk at this text that is ended with a nice looking lin: <Link href=\"/\" text=\"Click me!\" /></p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Home(props) {\r\n  return <div>Here we demo removable ads!</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function MonetizedContent(props) {\r\n  return (\r\n    <div>\r\n      <h1>Monetized Content</h1>\r\n      <p>Monetize playback of your content!</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nexport default function Button(props) {\r\n  let classNames = `Button ${props.active ? \"Button-active\" : \"\"}`;\r\n  return (\r\n    <div className={classNames} onClick={props.onClick}>\r\n      {props.text}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./WMSpoofer.css\";\r\nimport Button from \"../common/Button\";\r\n\r\nconst WM_STATE_STOPPED = \"stopped\";\r\nconst WM_STATE_PENDING = \"pending\";\r\nconst WM_STATE_STARTED = \"started\";\r\nconst WM_EVENT_STOPPED = \"monetizationstop\";\r\nconst WM_EVENT_STARTED = \"monetizationstart\";\r\nconst WM_EVENT_PENDING = \"monetizationpending\";\r\nconst WM_EVENT_PROGRESS = \"monetizationprogress\";\r\n\r\nexport default function WebMonetizationSpoofer(props) {\r\n  // User-facing state\r\n  const [sliderValue, setSliderValue] = useState(10);\r\n  const [isWebMonetized, setIsWebMonetized] = useState(false);\r\n  const [wmStatus, setWMStatus] = useState(\"\");\r\n\r\n  // Internal WM state\r\n  const wmTag = useRef();\r\n  const startWMTimer = useRef();\r\n  const wmInterval = useRef();\r\n  const requestId = useRef();\r\n\r\n  const dispatchWMProgressEvent = () => {\r\n    const progressEvent = new CustomEvent(WM_EVENT_PROGRESS, {\r\n      detail: {\r\n        requestId: requestId.current,\r\n        paymentPointer: wmTag.current,\r\n        amount: 1,\r\n        assetCode: \"SEK\",\r\n        assetScale: 3,\r\n      },\r\n    });\r\n\r\n    document.monetization.dispatchEvent(progressEvent);\r\n  };\r\n\r\n  const dispatchWMStateEvent = (wmEvent) => {\r\n    const stateEvent = new CustomEvent(wmEvent, {\r\n      detail: {\r\n        requestId: requestId.current,\r\n        paymentPointer: wmTag.current,\r\n        finalized: wmEvent === WM_EVENT_STOPPED ? true : undefined, // Should payment not be final?\r\n      },\r\n    });\r\n\r\n    document.monetization.dispatchEvent(stateEvent);\r\n  };\r\n\r\n  const generateId = () => {\r\n    console.log(\"Generating id\");\r\n    requestId.current =\r\n      Math.random().toString(36).substring(2) + Date.now().toString(36);\r\n  };\r\n\r\n  const pendingWM = () => {\r\n    console.log(\"Pending WM\");\r\n\r\n    setWMState(WM_STATE_PENDING);\r\n    dispatchWMStateEvent(WM_EVENT_PENDING);\r\n\r\n    generateId(); // Should this only be generated once?\r\n    startWMTimer.current = setTimeout(startWM, 1000);\r\n  };\r\n\r\n  const setWMState = (state) => {\r\n    setWMStatus(state);\r\n    document.monetization.state = state;\r\n  };\r\n\r\n  const startWM = () => {\r\n    console.log(`Starting WM with id ${requestId.current}`);\r\n\r\n    setWMState(WM_STATE_STARTED);\r\n    dispatchWMStateEvent(WM_EVENT_STARTED);\r\n\r\n    // Send one instance of money directly\r\n    dispatchWMProgressEvent();\r\n    wmInterval.current = setInterval(() => {\r\n      console.log(`Sending money! id: ${requestId.current}`);\r\n      dispatchWMProgressEvent();\r\n    }, 1000);\r\n  };\r\n\r\n  const stopWM = () => {\r\n    console.log(\"Stopping WM\");\r\n\r\n    setWMState(WM_STATE_STOPPED);\r\n    dispatchWMStateEvent(WM_EVENT_STOPPED);\r\n\r\n    // Clear timer & interval\r\n    clearTimeout(startWMTimer.current);\r\n    clearInterval(wmInterval.current);\r\n  };\r\n\r\n  const toggleWM = () => {\r\n    if (wmStatus === WM_STATE_STARTED || wmStatus === WM_STATE_PENDING) {\r\n      stopWM();\r\n    } else {\r\n      pendingWM();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"setting WM\");\r\n    document.monetization = document.createElement(\"div\");\r\n    setWMState(WM_STATE_STOPPED);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    wmTag.current = document.head.querySelector(\r\n      'meta[name=\"monetization\"]'\r\n    ).content;\r\n    setIsWebMonetized(!!wmTag.current);\r\n  }, []); // Should run more often than mount/unmount\r\n\r\n  return (\r\n    <div className=\"WMSpoofer-container\">\r\n      <p>Here we can show some status about WM</p>\r\n      <p>\r\n        Web Monetization tag: {isWebMonetized ? \"Exists\" : \"Does not exist\"}\r\n      </p>\r\n      <p>Web Monetization is: {wmStatus}</p>\r\n      <p>Maybe show money sent here, with an option to reset!</p>\r\n      <Button onClick={() => toggleWM()} text={\"Click me to start/stop WM\"} />\r\n      <Button text={\"I am another button\"} />\r\n      <label>Some slidervalue: {sliderValue}</label>\r\n      <input\r\n        type=\"range\"\r\n        min=\"0\"\r\n        max=\"50\"\r\n        value={sliderValue}\r\n        onChange={(event) => setSliderValue(event.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport \"./Separator.css\"\r\n\r\nexport default function Separator(props) {\r\n  return <div className=\"Separator\"></div>\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Home from \"./components/Home\";\r\nimport Ads from \"./components/Ads/Ads\";\r\nimport MonetizedContent from \"./components/MonetizedContent/MonetizedContent\";\r\nimport WebMonetizationSpoofer from \"./components/WebMonetizationSpoofer/WebMonetizationSpoofer\";\r\nimport Button from \"./components/common/Button\";\r\nimport Separator from \"./components/common/Separator\";\r\n\r\nconst ADS = \"Ads\";\r\nconst MONETIZED_CONTENT = \"MonetizedContent\";\r\nconst HOME = \"Home\";\r\n\r\nfunction App() {\r\n  const [activePage, setActivePage] = useState(HOME);\r\n  const [displayedComponent, setDisplayedComponent] = useState(<Home />);\r\n\r\n  useEffect(() => {\r\n    if (activePage === ADS) {\r\n      setDisplayedComponent(<Ads />);\r\n    } else if (activePage === MONETIZED_CONTENT) {\r\n      setDisplayedComponent(<MonetizedContent />);\r\n    } else {\r\n      setDisplayedComponent(<Home />);\r\n    }\r\n  }, [activePage]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"sidebar\">\r\n        <Button\r\n          onClick={() => setActivePage(HOME)}\r\n          text={\"Home\"}\r\n          active={activePage === HOME}\r\n        />\r\n        <Button\r\n          onClick={() => setActivePage(ADS)}\r\n          text={\"Ads\"}\r\n          active={activePage === ADS}\r\n        />\r\n        <Button\r\n          onClick={() => setActivePage(MONETIZED_CONTENT)}\r\n          text={\"Monetized Content\"}\r\n          active={activePage === MONETIZED_CONTENT}\r\n        />\r\n        <Separator />\r\n        <WebMonetizationSpoofer />\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"content-inner\">{displayedComponent}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}